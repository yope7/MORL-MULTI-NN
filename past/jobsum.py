import numpy as np

jobs = np.array([[0, 1, 1, 0, 3, 0, 10], [0, 2, 2, 0, 4, 1, 4], [1, 1, 2, 1, 4, 2, 6], [1, 2, 1, 0, 2, 3, 8], [2, 3, 2, 1, 3, 4, 6], [2, 1, 2, 0, 0, 5, 9], [3, 3, 1, 0, 1, 6, -1], [3, 3, 2, 0, 0, 7, -1], [4, 3, 2, 1, 1, 8, -1], [4, 1, 2, 1, 0, 9, -1], [5, 2, 1, 0, 5, 10, -1], [5, 1, 2, 1, 2, 11, -1], [6, 3, 2, 0, 1, 12, -1], [6, 3, 2, 1, 0, 13, -1], [7, 3, 1, 0, 1, 14, -1], [7, 3, 1, 1, 2, 15, -1], [8, 3, 2, 0, 4, 16, -1], [8, 2, 1, 0, 1, 17, -1], [9, 1, 2, 1, 0, 18, -1], [9, 1, 2, 0, 2, 19, -1], [10, 2, 2, 0, 4, 20, -1], [10, 2, 1, 1, 2, 21, -1], [11, 2, 1, 0, 0, 22, -1], [11, 1, 2, 1, 4, 23, -1], [12, 3, 1, 0, 4, 24, -1], [12, 2, 1, 1, 2, 25, -1], [13, 3, 2, 1, 1, 26, -1], [13, 1, 2, 0, 4, 27, -1], [14, 2, 2, 0, 3, 28, -1], [14, 3, 1, 1, 5, 29, -1], [15, 2, 1, 1, 3, 30, -1], [15, 2, 2, 0, 0, 31, -1], [16, 1, 2, 1, 5, 32, -1], [16, 2, 1, 0, 1, 33, -1], [17, 3, 2, 0, 5, 34, -1], [17, 2, 2, 0, 4, 35, -1], [18, 3, 2, 0, 4, 36, -1], [18, 1, 2, 0, 2, 37, -1], [19, 3, 2, 1, 3, 38, -1], [19, 3, 2, 0, 4, 39, -1], [20, 1, 2, 0, 2, 40, -1], [20, 3, 1, 1, 3, 41, -1], [21, 3, 2, 1, 5, 42, -1], [21, 3, 2, 1, 1, 43, -1], [22, 1, 2, 0, 2, 44, -1], [22, 3, 2, 1, 5, 45, -1], [23, 1, 2, 0, 2, 46, -1], [23, 2, 1, 1, 3, 47, -1], [24, 3, 1, 0, 4, 48, -1], [24, 2, 1, 1, 3, 49, -1], [25, 3, 1, 1, 1, 50, -1], [25, 1, 1, 0, 1, 51, -1], [26, 3, 2, 1, 0, 52, -1], [26, 3, 2, 0, 2, 53, -1], [27, 1, 2, 1, 1, 54, -1], [27, 1, 2, 1, 2, 55, -1], [28, 2, 2, 0, 5, 56, -1], [28, 3, 2, 1, 0, 57, -1], [29, 1, 1, 1, 4, 58, -1], [29, 3, 2, 0, 4, 59, -1], [30, 3, 1, 1, 3, 60, -1], [30, 2, 2, 0, 2, 61, -1], [31, 2, 1, 1, 3, 62, -1], [31, 3, 1, 1, 1, 63, -1], [32, 3, 1, 1, 5, 64, -1], [32, 2, 2, 0, 3, 65, -1], [33, 3, 2, 1, 3, 66, -1], [33, 3, 2, 0, 0, 67, -1], [34, 2, 1, 1, 5, 68, -1], [34, 1, 2, 1, 3, 69, -1], [35, 3, 1, 1, 4, 70, -1], [35, 2, 2, 0, 3, 71, -1], [36, 2, 1, 0, 5, 72, -1], [36, 3, 1, 1, 5, 73, -1], [37, 3, 1, 0, 3, 74, -1], [37, 3, 1, 1, 4, 75, -1], [38, 1, 2, 1, 5, 76, -1], [38, 3, 1, 1, 1, 77, -1], [39, 2, 2, 0, 3, 78, -1], [39, 2, 2, 1, 0, 79, -1], [40, 2, 2, 1, 5, 80, -1], [40, 3, 2, 1, 5, 81, -1], [41, 3, 1, 0, 3, 82, -1], [41, 1, 2, 1, 1, 83, -1], [42, 3, 2, 0, 4, 84, -1], [42, 3, 1, 1, 2, 85, -1], [43, 2, 2, 0, 1, 86, -1], [43, 1, 2, 0, 4, 87, -1], [44, 2, 1, 1, 0, 88, -1], [44, 1, 2, 0, 0, 89, -1], [45, 2, 2, 1, 2, 90, -1], [45, 1, 1, 1, 4, 91, -1], [46, 1, 1, 0, 5, 92, -1], [46, 2, 1, 1, 3, 93, -1], [47, 3, 2, 1, 4, 94, -1], [47, 3, 1, 0, 5, 95, -1], [48, 2, 1, 1, 5, 96, -1], [48, 1, 2, 0, 0, 97, -1], [49, 2, 1, 1, 4, 98, -1], [49, 3, 1, 0, 4, 99, -1], [50, 3, 1, 0, 4, 100, -1], [50, 2, 1, 1, 1, 101, -1]])

print('len(jobs): ' + str(len(jobs)))

print('jobs: ' + str(jobs))
i=0
user_wt = [0 for p in range(5)]
end_time = 1000000
end_time = 0
waiting_time_sum = 0
while True:
    #待ち時間を保持する変数
    if i < len(jobs):  # そのエピソードで生成されたジョブの中でまだ見ていないジョブがある場合
        print('env.jobs[i]: ' + str(jobs[i]))
        print('i: ' + str(i))
        submitted_time = jobs[i][0]
        if submitted_time <= end_time:  # ジョブが提出時刻を迎えていた場合
            print('pass 1')
            waiting_time = jobs[i][-1]
            if waiting_time == -1:  # 割り当てられていなかった場合
                print('pass 2')
                waiting_time = 1000000  # 待ち時間を大きめに設定
            waiting_time_sum += waiting_time    # 待ち時間を記録
            user_wt[jobs[i][4]] += waiting_time
            print('user updated')
            i += 1
        else:  # ジョブが提出時刻を迎えていなかった場合
            print('break')
            break
    else:  # そのエピソードで生成されたジョブを全て見た場合
        print('break end')
        break

print('user_wt: ' + str(user_wt))